name: Serverless Prod Deployment
on:
  workflow_dispatch:
  push:
    branches:
      - "main"
      - "master"
concurrency:
  # Cancel in-progress deploys to main branch
  group: ${{ github.ref }}
  cancel-in-progress: true
env:
  DAGSTER_CLOUD_URL: "http://dagster.cloud/metaplane"
  DAGSTER_CLOUD_API_TOKEN: ${{ secrets.DAGSTER_CLOUD_API_TOKEN }}

jobs:
  parse_workspace:
    runs-on: ubuntu-latest
    outputs:
      build_info: ${{ steps.parse-workspace.outputs.build_info }}
    steps:
      - uses: actions/checkout@v3
      - name: Parse cloud workspace
        id: parse-workspace
        uses: dagster-io/dagster-cloud-action/actions/utils/parse_workspace@v0.1
        with:
          dagster_cloud_file: dagster_cloud.yaml

  dagster_cloud_build_push:
    runs-on: ubuntu-latest
    needs: parse_workspace
    name: Dagster Serverless Deploy
    strategy:
      fail-fast: false
      matrix:
        location: ${{ fromJSON(needs.parse_workspace.outputs.build_info) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}
      - name: Checkout DBT
        uses: actions/checkout@v3
        with:
          repository: metaplane/metaplane-dagster
          path: ./dbtproj
      
      #  Remainder modified from the default dagster-cloud-serverless-deploy action

      - name: Checkout action repo
        uses: actions/checkout@v3
        with:
          repository: dagster-io/dagster-cloud-action
          path: ./action-repo/

      - name: Get serverless organization info
        uses: ./action-repo/actions/utils/registry_info
        with:
          organization_id: ${{ secrets.ORGANIZATION_ID }}
          deployment: "prod"
        env:
          DAGSTER_CLOUD_API_TOKEN: ${{ secrets.DAGSTER_CLOUD_API_TOKEN }}

      - name: Login to ECR
        run: echo "${{ env.AWS_ECR_PASSWORD }}" | docker login --username ${{ env.AWS_ECR_USERNAME }} --password-stdin ${{  env.REGISTRY_URL  }}
        shell: bash

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Copy user code template file
        uses: ./action-repo/actions/utils/copy_template
        with: 
          target_directory: ${{ matrix.location.directory }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.location.directory }}
          push: true
          tags: "${{ env.REGISTRY_URL }}:prod-${{ matrix.location.name }}-${{ github.sha }}"
          labels: |
            branch=${{ github.head_ref }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Dagster Cloud
        uses: ./action-repo/actions/utils/deploy
        id: deploy
        with:
          organization_id: ${{ secrets.ORGANIZATION_ID }}
          deployment: "prod"
          pr: "${{ github.event.number }}"
          location: ${{ toJson(matrix.location) }}
          image_tag: prod-${{ matrix.location.name }}-${{ github.sha }}
          registry: ${{ env.REGISTRY_URL }}
        env:
          DAGSTER_CLOUD_API_TOKEN: ${{ secrets.DAGSTER_CLOUD_API_TOKEN }}